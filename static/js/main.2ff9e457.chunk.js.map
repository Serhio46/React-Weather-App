{"version":3,"sources":["components/Header.jsx","components/MainWeather.jsx","components/Card.jsx","components/Secondary.jsx","components/Content.jsx","App.js","index.js"],"names":["Header","className","MainWeather","main","cityTitle","temperature","feels","clouds","image","width","height","src","alt","Card","obj","title","value","units","icon","Secondary","inputCity","findCity","clearInput","submitCity","secondary","date","onChange","e","target","onClick","type","placeholder","map","index","Content","useState","setFindCity","city","setSity","setMain","setSecondary","setDate","useEffect","axios","get","then","deg","data","changeTimeSun","timestamp","Date","minutes","getMinutes","getHours","stamp","time","getUTCMinutes","getUTCDay","getUTCHours","changeDate","timezone","name","sys","country","Math","round","temp","feels_like","weather","description","humidity","wind","speed","visibility","sunrise","sunset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ff9e457.chunk.js","sourcesContent":["\r\n\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<h1 className=\"title\">React Weather App</h1>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;","function MainWeather({ main }) {\r\n\r\n\tconst { cityTitle, temperature, feels, clouds, image } = main;\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<h2>{cityTitle}</h2>\r\n\t\t\t<div className='overcast'>{clouds}</div>\r\n\t\t\t<img width={250} height={250} src={`/img/${image}.svg`} alt=\"forecast\" />\r\n\t\t\t<div className='temp'>{temperature}&deg;С</div>\r\n\t\t\t<div className='feels'>Feels like {feels}&deg;С</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MainWeather;","function Card({ obj }) {\r\n\r\n\tconst { title, value, units, icon } = obj;\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<img height={90} width={90} src={`/img/${icon}`} alt=\"\" />\r\n\t\t\t<div className=\"info\">\r\n\t\t\t\t<div>{title}</div>\r\n\t\t\t\t<div className=\"value\">{value}</div>\r\n\t\t\t\t<div>{units}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nfunction Secondary({ inputCity, findCity, clearInput, submitCity, secondary, date }) {\r\n\r\n\tconst onChangeCity = (e) => {\r\n\t\tinputCity(e.target.value);\r\n\t}\r\n\r\n\tconst onSumbit = () => {\r\n\t\tsubmitCity(findCity);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"secondary\">\r\n\t\t\t<div className=\"secondary__title\">\r\n\t\t\t\t<div className=\"secondary__date\">{date}</div>\r\n\t\t\t\t<div className=\"search-block\">\r\n\t\t\t\t\t<input onChange={onChangeCity} onClick={clearInput} value={findCity} type=\"text\" placeholder='Поиск...' />\r\n\t\t\t\t\t<button onClick={onSumbit}>Ok</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"cards\">\r\n\t\t\t\t{secondary.map((obj, index) => <Card obj={obj} key={`${obj.title}_${index}`} />)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Secondary;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MainWeather from './MainWeather';\r\nimport Secondary from './Secondary';\r\n\r\nfunction Content() {\r\n\r\n\tconst [findCity, setFindCity] = useState('Minsk');\r\n\tconst [city, setSity] = useState('Minsk');\r\n\tconst [main, setMain] = useState({});\r\n\tconst [secondary, setSecondary] = useState([]);\r\n\tconst [date, setDate] = useState('');\r\n\r\n\t//Очищение инпута, так как у нас инпут зависимый от состояния\r\n\tconst clearInput = () => {\r\n\t\tsetFindCity('');\r\n\t}\r\n\r\n\tconst inputCity = (city) => {\r\n\t\tsetFindCity(city);\r\n\t};\r\n\r\n\t//Подтвеждение города я сделал потомучто если делать через onChange, при каждой новой букве, будет отправаляться запрос на сервер, что не есть гуд!\r\n\tconst submitCity = (city) => {\r\n\t\tsetSity(city);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f03c11c0e90130d2d5d8db02bc4c5eb4`)\r\n\t\t\t.then(({ data }) => {\r\n\r\n\t\t\t\t//Установка рассвета и заката, перевод из timestamp в нормальные единицы\r\n\t\t\t\tconst changeTimeSun = (timestamp) => {\r\n\t\t\t\t\tconst date = new Date(timestamp * 1000);\r\n\t\t\t\t\tlet minutes = date.getMinutes();\r\n\t\t\t\t\tif (minutes <= 9) {\r\n\t\t\t\t\t\tminutes = `0${minutes}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst time = `${date.getHours()}:${minutes}`;\r\n\t\t\t\t\treturn time;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Установка локального времени\r\n\t\t\t\tconst changeDate = (stamp) => {\r\n\t\t\t\t\tconst weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\t\t\t\t\tconst time = new Date();\r\n\t\t\t\t\tlet minutes = time.getUTCMinutes();\r\n\t\t\t\t\tif (minutes <= 9) {\r\n\t\t\t\t\t\tminutes = `0${minutes}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst localTime = `${weekDays[time.getUTCDay()]}, ${time.getUTCHours() + stamp / 3600}:${minutes}`;\r\n\t\t\t\t\treturn localTime;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Перевод градусов в направление ветра\r\n\t\t\t\tconst changeDirection = (deg) => {\r\n\t\t\t\t\tconst directions = ['north', 'northeast', 'east', 'southeast', 'south', 'southwest', 'west', 'northwest'];\r\n\t\t\t\t\tconst degrees = Math.round(deg * 8 / 360);\r\n\t\t\t\t\treturn directions[degrees];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetDate(changeDate(data.timezone));\r\n\r\n\t\t\t\tsetMain({\r\n\t\t\t\t\tcityTitle: `${data.name}, ${data.sys.country}`,\r\n\t\t\t\t\ttemperature: Math.round(data.main.temp - 273.15),\r\n\t\t\t\t\tfeels: Math.round(data.main.feels_like - 273.15),\r\n\t\t\t\t\tclouds: data.weather[0].description,\r\n\t\t\t\t\timage: data.weather[0].icon,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetSecondary([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Humidity\",\r\n\t\t\t\t\t\tvalue: data.main.humidity,\r\n\t\t\t\t\t\tunits: \"%\",\r\n\t\t\t\t\t\ticon: \"025-humidity.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Weend speed\",\r\n\t\t\t\t\t\tvalue: data.wind.speed,\r\n\t\t\t\t\t\tunits: \"m/s\",\r\n\t\t\t\t\t\ticon: \"windspeed.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Weend direction\",\r\n\t\t\t\t\t\tvalue: changeDirection(data.wind.deg),\r\n\t\t\t\t\t\tunits: null,\r\n\t\t\t\t\t\ticon: \"windderection.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Visibility\",\r\n\t\t\t\t\t\tvalue: data.visibility,\r\n\t\t\t\t\t\tunits: \"m\",\r\n\t\t\t\t\t\ticon: \"binocular.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Sunrise\",\r\n\t\t\t\t\t\tvalue: changeTimeSun(data.sys.sunrise),\r\n\t\t\t\t\t\tunits: null,\r\n\t\t\t\t\t\ticon: \"sunrise.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: \"Sunset\",\r\n\t\t\t\t\t\tvalue: changeTimeSun(data.sys.sunset),\r\n\t\t\t\t\t\tunits: null,\r\n\t\t\t\t\t\ticon: \"sunset.png\",\r\n\t\t\t\t\t},\r\n\t\t\t\t])\r\n\t\t\t})\r\n\t}, [city]);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t<div className=\"content__left\"><MainWeather main={main} /></div>\r\n\t\t\t<div className=\"content__right\">\r\n\t\t\t\t<Secondary\r\n\t\t\t\t\tdate={date}\r\n\t\t\t\t\tsecondary={secondary}\r\n\t\t\t\t\tinputCity={inputCity}\r\n\t\t\t\t\tfindCity={findCity}\r\n\t\t\t\t\tclearInput={clearInput}\r\n\t\t\t\t\tsubmitCity={submitCity} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Content;","import Header from './components/Header';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}